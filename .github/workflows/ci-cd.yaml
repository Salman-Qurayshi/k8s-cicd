name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: cicd-app

jobs:
  test:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run security audit
      run: npm audit --audit-level high

  build-and-push:
    needs: test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-  
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

    - name: Determine Image Tag and Update deployment.yaml 
      run: |
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        echo "DEBUG: Determined Short SHA: '$SHORT_SHA'"

        echo "DEBUG: Determined Branch Name: '$BRANCH_NAME'"

        BRANCH_NAME="${{ github.ref_name }}"

        SPECIFIC_TAG_SUFFIX="${BRANCH_NAME}-${SHORT_SHA}"
        echo "DEBUG: Constructed Specific Tag Suffix: '$SPECIFIC_TAG_SUFFIX'"

        FULL_IMAGE_NAME="${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:$SPECIFIC_TAG_SUFFIX"
        echo "DEBUG: Final FULL_IMAGE_NAME for deployment: '$FULL_IMAGE_NAME'"

        echo "INFO: Updating 'image:' in k8s-manifests/deployment.yaml to '$FULL_IMAGE_NAME'"
        sed -i "s|image: cicd-app:latest|image: $FULL_IMAGE_NAME|g" k8s-manifests/deployment.yaml

        APP_VERSION_SHA="$SHORT_SHA"
        echo "DEBUG: APP_VERSION to set: '$APP_VERSION_SHA'"

        echo "INFO: Updating 'APP_VERSION' in k8s-manifests/deployment.yaml to '$APP_VERSION_SHA'"
        sed -i "s|value: \"1.0.0\"|value: \"$APP_VERSION_SHA\"|g" k8s-manifests/deployment.yaml

    - name: Debug - Show updated deployment.yaml
      run: |
        echo "--- Contents of k8s-manifests/deployment.yaml after updates ---"
        cat k8s-manifests/deployment.yaml
        echo "---------------------------------------------------------------"

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s-manifests/
        kubectl rollout status deployment/cicd-app --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods -l app=cicd-app
        kubectl get services cicd-app-service